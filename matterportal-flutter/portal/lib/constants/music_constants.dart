// This file contains music-related constants for use throughout the app.

class Country {
  final String name;
  final String code;
  final String flag;

  const Country({
    required this.name,
    required this.code,
    required this.flag,
  });
}

final List<Country> countries = [
  const Country(name: 'Afghanistan', code: 'AF', flag: 'ğŸ‡¦ğŸ‡«'),
  const Country(name: 'Albania', code: 'AL', flag: 'ğŸ‡¦ğŸ‡±'),
  const Country(name: 'Algeria', code: 'DZ', flag: 'ğŸ‡©ğŸ‡¿'),
  const Country(name: 'Andorra', code: 'AD', flag: 'ğŸ‡¦ğŸ‡©'),
  const Country(name: 'Angola', code: 'AO', flag: 'ğŸ‡¦ğŸ‡´'),
  const Country(name: 'Antigua and Barbuda', code: 'AG', flag: 'ğŸ‡¦ğŸ‡¬'),
  const Country(name: 'Argentina', code: 'AR', flag: 'ğŸ‡¦ğŸ‡·'),
  const Country(name: 'Armenia', code: 'AM', flag: 'ğŸ‡¦ğŸ‡²'),
  const Country(name: 'Australia', code: 'AU', flag: 'ğŸ‡¦ğŸ‡º'),
  const Country(name: 'Austria', code: 'AT', flag: 'ğŸ‡¦ğŸ‡¹'),
  const Country(name: 'Azerbaijan', code: 'AZ', flag: 'ğŸ‡¦ğŸ‡¿'),
  const Country(name: 'Bahamas', code: 'BS', flag: 'ğŸ‡§ğŸ‡¸'),
  const Country(name: 'Bahrain', code: 'BH', flag: 'ğŸ‡§ğŸ‡­'),
  const Country(name: 'Bangladesh', code: 'BD', flag: 'ğŸ‡§ğŸ‡©'),
  const Country(name: 'Barbados', code: 'BB', flag: 'ğŸ‡§ğŸ‡§'),
  const Country(name: 'Belarus', code: 'BY', flag: 'ğŸ‡§ğŸ‡¾'),
  const Country(name: 'Belgium', code: 'BE', flag: 'ğŸ‡§ğŸ‡ª'),
  const Country(name: 'Belize', code: 'BZ', flag: 'ğŸ‡§ğŸ‡¿'),
  const Country(name: 'Benin', code: 'BJ', flag: 'ğŸ‡§ğŸ‡¯'),
  const Country(name: 'Bhutan', code: 'BT', flag: 'ğŸ‡§ğŸ‡¹'),
  const Country(name: 'Bolivia', code: 'BO', flag: 'ğŸ‡§ğŸ‡´'),
  const Country(name: 'Bosnia and Herzegovina', code: 'BA', flag: 'ğŸ‡§ğŸ‡¦'),
  const Country(name: 'Botswana', code: 'BW', flag: 'ğŸ‡§ğŸ‡¼'),
  const Country(name: 'Brazil', code: 'BR', flag: 'ğŸ‡§ğŸ‡·'),
  const Country(name: 'Brunei', code: 'BN', flag: 'ğŸ‡§ğŸ‡³'),
  const Country(name: 'Bulgaria', code: 'BG', flag: 'ğŸ‡§ğŸ‡¬'),
  const Country(name: 'Burkina Faso', code: 'BF', flag: 'ğŸ‡§ğŸ‡«'),
  const Country(name: 'Burundi', code: 'BI', flag: 'ğŸ‡§ğŸ‡®'),
  const Country(name: 'Cambodia', code: 'KH', flag: 'ğŸ‡°ğŸ‡­'),
  const Country(name: 'Cameroon', code: 'CM', flag: 'ğŸ‡¨ğŸ‡²'),
  const Country(name: 'Canada', code: 'CA', flag: 'ğŸ‡¨ğŸ‡¦'),
  const Country(name: 'Cape Verde', code: 'CV', flag: 'ğŸ‡¨ğŸ‡»'),
  const Country(name: 'Central African Republic', code: 'CF', flag: 'ğŸ‡¨ğŸ‡«'),
  const Country(name: 'Chad', code: 'TD', flag: 'ğŸ‡¹ğŸ‡©'),
  const Country(name: 'Chile', code: 'CL', flag: 'ğŸ‡¨ğŸ‡±'),
  const Country(name: 'China', code: 'CN', flag: 'ğŸ‡¨ğŸ‡³'),
  const Country(name: 'Colombia', code: 'CO', flag: 'ğŸ‡¨ğŸ‡´'),
  const Country(name: 'Comoros', code: 'KM', flag: 'ğŸ‡°ğŸ‡²'),
  const Country(name: 'Congo', code: 'CG', flag: 'ğŸ‡¨ğŸ‡¬'),
  const Country(name: 'Costa Rica', code: 'CR', flag: 'ğŸ‡¨ğŸ‡·'),
  const Country(name: 'Croatia', code: 'HR', flag: 'ğŸ‡­ğŸ‡·'),
  const Country(name: 'Cuba', code: 'CU', flag: 'ğŸ‡¨ğŸ‡º'),
  const Country(name: 'Cyprus', code: 'CY', flag: 'ğŸ‡¨ğŸ‡¾'),
  const Country(name: 'Czech Republic', code: 'CZ', flag: 'ğŸ‡¨ğŸ‡¿'),
  const Country(name: 'Denmark', code: 'DK', flag: 'ğŸ‡©ğŸ‡°'),
  const Country(name: 'Djibouti', code: 'DJ', flag: 'ğŸ‡©ğŸ‡¯'),
  const Country(name: 'Dominica', code: 'DM', flag: 'ğŸ‡©ğŸ‡²'),
  const Country(name: 'Dominican Republic', code: 'DO', flag: 'ğŸ‡©ğŸ‡´'),
  const Country(name: 'DR Congo', code: 'CD', flag: 'ğŸ‡¨ğŸ‡©'),
  const Country(name: 'Ecuador', code: 'EC', flag: 'ğŸ‡ªğŸ‡¨'),
  const Country(name: 'Egypt', code: 'EG', flag: 'ğŸ‡ªğŸ‡¬'),
  const Country(name: 'El Salvador', code: 'SV', flag: 'ğŸ‡¸ğŸ‡»'),
  const Country(name: 'Equatorial Guinea', code: 'GQ', flag: 'ğŸ‡¬ğŸ‡¶'),
  const Country(name: 'Eritrea', code: 'ER', flag: 'ğŸ‡ªğŸ‡·'),
  const Country(name: 'Estonia', code: 'EE', flag: 'ğŸ‡ªğŸ‡ª'),
  const Country(name: 'Eswatini', code: 'SZ', flag: 'ğŸ‡¸ğŸ‡¿'),
  const Country(name: 'Ethiopia', code: 'ET', flag: 'ğŸ‡ªğŸ‡¹'),
  const Country(name: 'Fiji', code: 'FJ', flag: 'ğŸ‡«ğŸ‡¯'),
  const Country(name: 'Finland', code: 'FI', flag: 'ğŸ‡«ğŸ‡®'),
  const Country(name: 'France', code: 'FR', flag: 'ğŸ‡«ğŸ‡·'),
  const Country(name: 'Gabon', code: 'GA', flag: 'ğŸ‡¬ğŸ‡¦'),
  const Country(name: 'Gambia', code: 'GM', flag: 'ğŸ‡¬ğŸ‡²'),
  const Country(name: 'Georgia', code: 'GE', flag: 'ğŸ‡¬ğŸ‡ª'),
  const Country(name: 'Germany', code: 'DE', flag: 'ğŸ‡©ğŸ‡ª'),
  const Country(name: 'Ghana', code: 'GH', flag: 'ğŸ‡¬ğŸ‡­'),
  const Country(name: 'Greece', code: 'GR', flag: 'ğŸ‡¬ğŸ‡·'),
  const Country(name: 'Grenada', code: 'GD', flag: 'ğŸ‡¬ğŸ‡©'),
  const Country(name: 'Guatemala', code: 'GT', flag: 'ğŸ‡¬ğŸ‡¹'),
  const Country(name: 'Guinea', code: 'GN', flag: 'ğŸ‡¬ğŸ‡³'),
  const Country(name: 'Guinea-Bissau', code: 'GW', flag: 'ğŸ‡¬ğŸ‡¼'),
  const Country(name: 'Guyana', code: 'GY', flag: 'ğŸ‡¬ğŸ‡¾'),
  const Country(name: 'Haiti', code: 'HT', flag: 'ğŸ‡­ğŸ‡¹'),
  const Country(name: 'Honduras', code: 'HN', flag: 'ğŸ‡­ğŸ‡³'),
  const Country(name: 'Hungary', code: 'HU', flag: 'ğŸ‡­ğŸ‡º'),
  const Country(name: 'Iceland', code: 'IS', flag: 'ğŸ‡®ğŸ‡¸'),
  const Country(name: 'India', code: 'IN', flag: 'ğŸ‡®ğŸ‡³'),
  const Country(name: 'Indonesia', code: 'ID', flag: 'ğŸ‡®ğŸ‡©'),
  const Country(name: 'Iran', code: 'IR', flag: 'ğŸ‡®ğŸ‡·'),
  const Country(name: 'Iraq', code: 'IQ', flag: 'ğŸ‡®ğŸ‡¶'),
  const Country(name: 'Ireland', code: 'IE', flag: 'ğŸ‡®ğŸ‡ª'),
  const Country(name: 'Israel', code: 'IL', flag: 'ğŸ‡®ğŸ‡±'),
  const Country(name: 'Italy', code: 'IT', flag: 'ğŸ‡®ğŸ‡¹'),
  const Country(name: 'Ivory Coast', code: 'CI', flag: 'ğŸ‡¨ğŸ‡®'),
  const Country(name: 'Jamaica', code: 'JM', flag: 'ğŸ‡¯ğŸ‡²'),
  const Country(name: 'Japan', code: 'JP', flag: 'ğŸ‡¯ğŸ‡µ'),
  const Country(name: 'Jordan', code: 'JO', flag: 'ğŸ‡¯ğŸ‡´'),
  const Country(name: 'Kazakhstan', code: 'KZ', flag: 'ğŸ‡°ğŸ‡¿'),
  const Country(name: 'Kenya', code: 'KE', flag: 'ğŸ‡°ğŸ‡ª'),
  const Country(name: 'Kiribati', code: 'KI', flag: 'ğŸ‡°ğŸ‡®'),
  const Country(name: 'Kuwait', code: 'KW', flag: 'ğŸ‡°ğŸ‡¼'),
  const Country(name: 'Kyrgyzstan', code: 'KG', flag: 'ğŸ‡°ğŸ‡¬'),
  const Country(name: 'Laos', code: 'LA', flag: 'ğŸ‡±ğŸ‡¦'),
  const Country(name: 'Latvia', code: 'LV', flag: 'ğŸ‡±ğŸ‡»'),
  const Country(name: 'Lebanon', code: 'LB', flag: 'ğŸ‡±ğŸ‡§'),
  const Country(name: 'Lesotho', code: 'LS', flag: 'ğŸ‡±ğŸ‡¸'),
  const Country(name: 'Liberia', code: 'LR', flag: 'ğŸ‡±ğŸ‡·'),
  const Country(name: 'Libya', code: 'LY', flag: 'ğŸ‡±ğŸ‡¾'),
  const Country(name: 'Liechtenstein', code: 'LI', flag: 'ğŸ‡±ğŸ‡®'),
  const Country(name: 'Lithuania', code: 'LT', flag: 'ğŸ‡±ğŸ‡¹'),
  const Country(name: 'Luxembourg', code: 'LU', flag: 'ğŸ‡±ğŸ‡º'),
  const Country(name: 'Madagascar', code: 'MG', flag: 'ğŸ‡²ğŸ‡¬'),
  const Country(name: 'Malawi', code: 'MW', flag: 'ğŸ‡²ğŸ‡¼'),
  const Country(name: 'Malaysia', code: 'MY', flag: 'ğŸ‡²ğŸ‡¾'),
  const Country(name: 'Maldives', code: 'MV', flag: 'ğŸ‡²ğŸ‡»'),
  const Country(name: 'Mali', code: 'ML', flag: 'ğŸ‡²ğŸ‡±'),
  const Country(name: 'Malta', code: 'MT', flag: 'ğŸ‡²ğŸ‡¹'),
  const Country(name: 'Marshall Islands', code: 'MH', flag: 'ğŸ‡²ğŸ‡­'),
  const Country(name: 'Mauritania', code: 'MR', flag: 'ğŸ‡²ğŸ‡·'),
  const Country(name: 'Mauritius', code: 'MU', flag: 'ğŸ‡²ğŸ‡º'),
  const Country(name: 'Mexico', code: 'MX', flag: 'ğŸ‡²ğŸ‡½'),
  const Country(name: 'Micronesia', code: 'FM', flag: 'ğŸ‡«ğŸ‡²'),
  const Country(name: 'Moldova', code: 'MD', flag: 'ğŸ‡²ğŸ‡©'),
  const Country(name: 'Monaco', code: 'MC', flag: 'ğŸ‡²ğŸ‡¨'),
  const Country(name: 'Mongolia', code: 'MN', flag: 'ğŸ‡²ğŸ‡³'),
  const Country(name: 'Montenegro', code: 'ME', flag: 'ğŸ‡²ğŸ‡ª'),
  const Country(name: 'Morocco', code: 'MA', flag: 'ğŸ‡²ğŸ‡¦'),
  const Country(name: 'Mozambique', code: 'MZ', flag: 'ğŸ‡²ğŸ‡¿'),
  const Country(name: 'Myanmar', code: 'MM', flag: 'ğŸ‡²ğŸ‡²'),
  const Country(name: 'Namibia', code: 'NA', flag: 'ğŸ‡³ğŸ‡¦'),
  const Country(name: 'Nauru', code: 'NR', flag: 'ğŸ‡³ğŸ‡·'),
  const Country(name: 'Nepal', code: 'NP', flag: 'ğŸ‡³ğŸ‡µ'),
  const Country(name: 'Netherlands', code: 'NL', flag: 'ğŸ‡³ğŸ‡±'),
  const Country(name: 'New Zealand', code: 'NZ', flag: 'ğŸ‡³ğŸ‡¿'),
  const Country(name: 'Nicaragua', code: 'NI', flag: 'ğŸ‡³ğŸ‡®'),
  const Country(name: 'Niger', code: 'NE', flag: 'ğŸ‡³ğŸ‡ª'),
  const Country(name: 'Nigeria', code: 'NG', flag: 'ğŸ‡³ğŸ‡¬'),
  const Country(name: 'North Korea', code: 'KP', flag: 'ğŸ‡°ğŸ‡µ'),
  const Country(name: 'North Macedonia', code: 'MK', flag: 'ğŸ‡²ğŸ‡°'),
  const Country(name: 'Norway', code: 'NO', flag: 'ğŸ‡³ğŸ‡´'),
  const Country(name: 'Oman', code: 'OM', flag: 'ğŸ‡´ğŸ‡²'),
  const Country(name: 'Pakistan', code: 'PK', flag: 'ğŸ‡µğŸ‡°'),
  const Country(name: 'Palau', code: 'PW', flag: 'ğŸ‡µğŸ‡¼'),
  const Country(name: 'Palestine', code: 'PS', flag: 'ğŸ‡µğŸ‡¸'),
  const Country(name: 'Panama', code: 'PA', flag: 'ğŸ‡µğŸ‡¦'),
  const Country(name: 'Papua New Guinea', code: 'PG', flag: 'ğŸ‡µğŸ‡¬'),
  const Country(name: 'Paraguay', code: 'PY', flag: 'ğŸ‡µğŸ‡¾'),
  const Country(name: 'Peru', code: 'PE', flag: 'ğŸ‡µğŸ‡ª'),
  const Country(name: 'Philippines', code: 'PH', flag: 'ğŸ‡µğŸ‡­'),
  const Country(name: 'Poland', code: 'PL', flag: 'ğŸ‡µğŸ‡±'),
  const Country(name: 'Portugal', code: 'PT', flag: 'ğŸ‡µğŸ‡¹'),
  const Country(name: 'Qatar', code: 'QA', flag: 'ğŸ‡¶ğŸ‡¦'),
  const Country(name: 'Romania', code: 'RO', flag: 'ğŸ‡·ğŸ‡´'),
  const Country(name: 'Russia', code: 'RU', flag: 'ğŸ‡·ğŸ‡º'),
  const Country(name: 'Rwanda', code: 'RW', flag: 'ğŸ‡·ğŸ‡¼'),
  const Country(name: 'Saint Kitts and Nevis', code: 'KN', flag: 'ğŸ‡°ğŸ‡³'),
  const Country(name: 'Saint Lucia', code: 'LC', flag: 'ğŸ‡±ğŸ‡¨'),
  const Country(name: 'Saint Vincent and the Grenadines', code: 'VC', flag: 'ğŸ‡»ğŸ‡¨'),
  const Country(name: 'Samoa', code: 'WS', flag: 'ğŸ‡¼ğŸ‡¸'),
  const Country(name: 'San Marino', code: 'SM', flag: 'ğŸ‡¸ğŸ‡²'),
  const Country(name: 'Sao Tome and Principe', code: 'ST', flag: 'ğŸ‡¸ğŸ‡¹'),
  const Country(name: 'Saudi Arabia', code: 'SA', flag: 'ğŸ‡¸ğŸ‡¦'),
  const Country(name: 'Senegal', code: 'SN', flag: 'ğŸ‡¸ğŸ‡³'),
  const Country(name: 'Serbia', code: 'RS', flag: 'ğŸ‡·ğŸ‡¸'),
  const Country(name: 'Seychelles', code: 'SC', flag: 'ğŸ‡¸ğŸ‡¨'),
  const Country(name: 'Sierra Leone', code: 'SL', flag: 'ğŸ‡¸ğŸ‡±'),
  const Country(name: 'Singapore', code: 'SG', flag: 'ğŸ‡¸ğŸ‡¬'),
  const Country(name: 'Slovakia', code: 'SK', flag: 'ğŸ‡¸ğŸ‡°'),
  const Country(name: 'Slovenia', code: 'SI', flag: 'ğŸ‡¸ğŸ‡®'),
  const Country(name: 'Solomon Islands', code: 'SB', flag: 'ğŸ‡¸ğŸ‡§'),
  const Country(name: 'Somalia', code: 'SO', flag: 'ğŸ‡¸ğŸ‡´'),
  const Country(name: 'South Africa', code: 'ZA', flag: 'ğŸ‡¿ğŸ‡¦'),
  const Country(name: 'South Korea', code: 'KR', flag: 'ğŸ‡°ğŸ‡·'),
  const Country(name: 'South Sudan', code: 'SS', flag: 'ğŸ‡¸ğŸ‡¸'),
  const Country(name: 'Spain', code: 'ES', flag: 'ğŸ‡ªğŸ‡¸'),
  const Country(name: 'Sri Lanka', code: 'LK', flag: 'ğŸ‡±ğŸ‡°'),
  const Country(name: 'Sudan', code: 'SD', flag: 'ğŸ‡¸ğŸ‡©'),
  const Country(name: 'Suriname', code: 'SR', flag: 'ğŸ‡¸ğŸ‡·'),
  const Country(name: 'Sweden', code: 'SE', flag: 'ğŸ‡¸ğŸ‡ª'),
  const Country(name: 'Switzerland', code: 'CH', flag: 'ğŸ‡¨ğŸ‡­'),
  const Country(name: 'Syria', code: 'SY', flag: 'ğŸ‡¸ğŸ‡¾'),
  const Country(name: 'Taiwan', code: 'TW', flag: 'ğŸ‡¹ğŸ‡¼'),
  const Country(name: 'Tajikistan', code: 'TJ', flag: 'ğŸ‡¹ğŸ‡¯'),
  const Country(name: 'Tanzania', code: 'TZ', flag: 'ğŸ‡¹ğŸ‡¿'),
  const Country(name: 'Thailand', code: 'TH', flag: 'ğŸ‡¹ğŸ‡­'),
  const Country(name: 'Timor-Leste', code: 'TL', flag: 'ğŸ‡¹ğŸ‡±'),
  const Country(name: 'Togo', code: 'TG', flag: 'ğŸ‡¹ğŸ‡¬'),
  const Country(name: 'Tonga', code: 'TO', flag: 'ğŸ‡¹ğŸ‡´'),
  const Country(name: 'Trinidad and Tobago', code: 'TT', flag: 'ğŸ‡¹ğŸ‡¹'),
  const Country(name: 'Tunisia', code: 'TN', flag: 'ğŸ‡¹ğŸ‡³'),
  const Country(name: 'Turkey', code: 'TR', flag: 'ğŸ‡¹ğŸ‡·'),
  const Country(name: 'Turkmenistan', code: 'TM', flag: 'ğŸ‡¹ğŸ‡²'),
  const Country(name: 'Tuvalu', code: 'TV', flag: 'ğŸ‡¹ğŸ‡»'),
  const Country(name: 'Uganda', code: 'UG', flag: 'ğŸ‡ºğŸ‡¬'),
  const Country(name: 'Ukraine', code: 'UA', flag: 'ğŸ‡ºğŸ‡¦'),
  const Country(name: 'United Arab Emirates', code: 'AE', flag: 'ğŸ‡¦ğŸ‡ª'),
  const Country(name: 'United Kingdom', code: 'GB', flag: 'ğŸ‡¬ğŸ‡§'),
  const Country(name: 'United States', code: 'US', flag: 'ğŸ‡ºğŸ‡¸'),
  const Country(name: 'Uruguay', code: 'UY', flag: 'ğŸ‡ºğŸ‡¾'),
  const Country(name: 'Uzbekistan', code: 'UZ', flag: 'ğŸ‡ºğŸ‡¿'),
  const Country(name: 'Vanuatu', code: 'VU', flag: 'ğŸ‡»ğŸ‡º'),
  const Country(name: 'Vatican City', code: 'VA', flag: 'ğŸ‡»ğŸ‡¦'),
  const Country(name: 'Venezuela', code: 'VE', flag: 'ğŸ‡»ğŸ‡ª'),
  const Country(name: 'Vietnam', code: 'VN', flag: 'ğŸ‡»ğŸ‡³'),
  const Country(name: 'Yemen', code: 'YE', flag: 'ğŸ‡¾ğŸ‡ª'),
  const Country(name: 'Zambia', code: 'ZM', flag: 'ğŸ‡¿ğŸ‡²'),
  const Country(name: 'Zimbabwe', code: 'ZW', flag: 'ğŸ‡¿ğŸ‡¼'),
];

List<String> languages = [
  'English',
  'Spanish',
  'French',
  'German',
  'Italian',
  'Portuguese',
  'Russian',
  'Turkish',
];

class MetadataLanguage {
  final String code;
  final String name;

  const MetadataLanguage(this.code, this.name);

  factory MetadataLanguage.fromMap(Map<String, dynamic> map) {
    return MetadataLanguage(
      map['code'] as String,
      map['name'] as String,
    );
  }

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is MetadataLanguage &&
          runtimeType == other.runtimeType &&
          code == other.code;

  @override
  int get hashCode => code.hashCode;

  @override
  String toString() => name;
}

final Map<String, List<String>> subgenres = {
  'Alternative': [
    'Chinese Alt', 'College Rock', 'EMO', 'Goth Rock', 'Grunge', 'Indie Pop', 'Indie Rock', 'Korean Indie', 'New Wave', 'Pop Punk', 'Punk'
  ],
  'Anime': ['Anime'],
  'Arabic': ['Arabic Pop', 'Islamic', 'Khaleeji', 'North African'],
  'Audiobooks': ['Audiobooks'],
  'Blues': [
    'Acoustic Blues', 'Blues', 'Chicago Blues', 'Classic Blues', 'Contemporary Blues', 'Country Blues', 'Delta Blues', 'Electric Blues', 'Traditional Blues'
  ],
  'Brazilian': [
    'AxÃ©', 'Baile Funk', 'Bossa Nova', 'Brazilian', 'Choro', 'ForrÃ³', 'Frevo', 'MPB', 'Pagode', 'Samba', 'Sertanejo'
  ],
  'Children\'s Music': [
    'Children\'s Music', 'Lullabies', 'Sing-Along', 'Stories'
  ],
  'Chinese': [
    'Chinese', 'Chinese Classical', 'Chinese Flute', 'Chinese Opera', 'Chinese Orchestral', 'Chinese Regional Folk', 'Chinese Strings', 'Taiwanese Folk', 'Tibetan Native Music'
  ],
  'Christian & Gospel': [
    'CCM', 'Christian & Gospel', 'Christian Metal', 'Christian Pop', 'Christian Rap', 'Christian Rock', 'Classic Christian', 'Contemporary Gospel', 'Gospel', 'Praise & Worship', 'Southern Gospel', 'Traditional Gospel'
  ],
  'Classical': [
    'Art Song', 'Avant-Garde', 'Baroque Era', 'Brass & Woodwinds', 'Cantata', 'Cello', 'Chamber Music', 'Chant', 'Choral', 'Classical', 'Classical Crossover', 'Classical Era', 'Contemporary Era', 'Electronic', 'Guitar', 'Impressionist', 'Medieval Era', 'Minimalism', 'Modern Era', 'Opera', 'Oratorio', 'Orchestral', 'Percussion', 'Piano', 'Piccolo', 'Renaissance', 'Romantic Era', 'Sacred', 'Solo Instrumental', 'Violin'
  ],
  'Comedy': ['Comedy', 'Novelty', 'Standup Comedy'],
  'Country': [
    'Alternative Country', 'Americana', 'Bluegrass', 'Contemporary Bluegrass', 'Contemporary Country', 'Country', 'Country Gospel', 'Honky Tonk', 'Outlaw Country', 'Thai Country', 'Traditional Bluegrass', 'Traditional Country', 'Urban Cowboy'
  ],
  'Dance': [
    'Afro House', 'Amapiano', 'Bass House', 'Big Room', 'Breakbeat', 'Breaks', 'Chill Out', 'Classic House', 'Dance', 'Deep House', 'DJ Tools', 'Drum & Bass', 'Dubstep', 'Electro House', 'Electronica', 'Funky House', 'Future House', 'Glitch Hop', 'Hard Dance', 'Hard Techno', 'Hardcore', 'House', 'Indie Dance', 'Jackin\' House', 'Jungle', 'Minimal', 'Nu Disco / Disco', 'Progressive House', 'Psy-Trance', 'Soulful House', 'Tech House'
  ],
  'Disney': ['Disney'],
  'Easy Listening': ['Easy Listening', 'Lounge', 'Swing'],
  'Electronic': [
    '140 / Deep Dubstep', 'Acapellas', 'Acid House', 'Afro / Latin', 'Afro Pop', 'Ambient', 'Baile Funk', 'Bass', 'Bassline', 'Battle Tools', 'Bounce', 'Breaks', 'Broken Beat', 'Broken Techno', 'Chill Out', 'Dark & Forest', 'Dark Disco', 'Deep / Hypnotic Techno', 'Deep Drum & Bass', 'Deep House', 'Deep Tech', 'Deep Trance', 'DJ Tools', 'Downtempo', 'Driving Techno', 'Drum & Bass', 'Dub Techno', 'Dubstep', 'EBM Techno', 'Electro', 'Electro House', 'Electro Pop', 'Electronic', 'Electronica', 'Frenchcore', 'Full-On', 'Funk / Soul', 'Future Bass', 'Future Rave', 'Glitch Hop', 'Goa Trance', 'Gqom', 'Grime', 'Halftime', 'Happy Hardcore', 'Hard Dance', 'Hard House', 'Hard Techno', 'Hard Trance', 'Hardstyle', 'House', 'Hypnotic Trance', 'IDM/Experimental', 'Indie Dance', 'Industrial', 'Italo', 'Jump Up', 'Latin Tech', 'Liquid', 'Loops', 'Mainstage', 'Melodic Dubstep', 'Melodic House', 'Melodic Techno', 'Midtempo', 'Minimal', 'Neo Rave', 'Organic House', 'Peak Time Techno', 'Phonk', 'Pop', 'Progressive House', 'Progressive Psy', 'Progressive Trance', 'Psy-Trance', 'Psychedelic', 'Psycore & Hi-Tech', 'Raw Techno', 'Raw Trance', 'Speed House', 'Tech House', 'Tech Trance', 'Techno', 'Terror', 'Trance', 'Trap', 'Tropical House', 'UK Bass', 'Uplifting Trance', 'Uptempo', 'Vocal Trance', 'Wave'
  ],
  'Enka': ['Enka'],
  'Fitness & Workout': ['Fitness & Workout'],
  'Folk': ['Contemporary Folk', 'Folk', 'Traditional Folk'],
  'French Pop': ['French Pop'],
  'Funk': ['Funk'],
  'German Folk': ['German Folk'],
  'German Pop': ['German Pop'],
  'Heavy Metal': ['Heavy Metal'],
  'Hip Hop/Rap': [
    'Alternative Rap', 'Chinese Hip-Hop', 'Dirty South', 'East Coast Rap', 'Gangsta Rap', 'Hardcore Rap', 'Hip Hop/Rap', 'Hip-Hop', 'Korean Hip-Hop', 'Latin Rap', 'Old School Rap', 'Rap', 'UK Hip Hop', 'Underground Rap', 'West Coast Rap'
  ],
  'Holiday': [
    'Chanukah', 'Christmas', 'Christmas: Children\'s', 'Christmas: Classic', 'Christmas: Classical', 'Christmas: Jazz', 'Christmas: Modern', 'Christmas: Pop', 'Christmas: R&B', 'Christmas: Religious', 'Christmas: Rock', 'Easter', 'Halloween', 'Holiday', 'Thanksgiving'
  ],
  'Indian': [
    'Bollywood', 'Devotional & Spiritual', 'Ghazals', 'Indian', 'Indian Classical', 'Indian Folk', 'Indian Pop', 'Regional Indian', 'Sufi', 'Tamil', 'Telugu'
  ],
  'Inspirational': ['Inspirational'],
  'Instrumental': ['Instrumental'],
  'J-pop': ['J-pop'],
  'Jazz': [
    'Acid Jazz', 'Avant-Garde Jazz', 'Bebop', 'Big Band', 'Contemporary Jazz', 'Cool', 'Crossover Jazz', 'Dixieland', 'Fusion', 'Hard Bop', 'Jazz', 'Latin Jazz', 'Mainstream Jazz', 'Ragtime', 'Smooth Jazz', 'Traditional Jazz', 'Vocal Jazz'
  ],
  'Karaoke': ['Instrumental', 'Karaoke'],
  'Kayokyoku': ['Kayokyoku'],
  'Korean': ['Korean', 'Korean Traditional'],
  'Latin': [
    'Alternativo & Rock Latino', 'Baladas y Boleros', 'Contemporary Latin', 'Latin', 'Latin Jazz', 'Pop Latino', 'Raices', 'Reggaeton', 'Regional Mexicano', 'Salsa y Tropical', 'Urbano Latino'
  ],
  'Marching Bands': ['Marching Bands'],
  'New Age': [
    'Healing', 'Meditation', 'Nature', 'New age', 'Relaxation', 'Travel', 'Yoga'
  ],
  'Other': ['Spoken Word'],
  'Pop': [
    'Adult Contemporary', 'Alternative Pop', 'Britpop', 'Cantopop', 'Dance Pop', 'Disco', 'French Pop', 'German Pop', 'Indo Pop', 'K-Pop', 'Korean Folk-Pop', 'Malaysian Pop', 'Mandopop', 'Manilla Sound', 'New Wave', 'Oldies', 'Original Pilipino Music', 'Pinoy Pop', 'Pop', 'Pop/Rock', 'Soft Rock', 'Tai-Pop', 'Teen Pop', 'Thai Pop'
  ],
  'Punk': ['Punk'],
  'R&B/Soul': [
    'Contemporary R&B', 'Disco', 'Doo Wop', 'Funk', 'Motown', 'Neo-Soul', 'R&B/Soul', 'Soul', 'Soul/R&B'
  ],
  'Reggae': [
    'Dancehall/Reggae', 'Dub', 'Lovers Rock', 'Modern Dancehall', 'Pop-Reggae', 'Ragga', 'Reggae', 'Roots Reggae', 'Ska'
  ],
  'Rock': [
    'Adult Alternative', 'American Trad Rock', 'Arena Rock', 'Blues-Rock', 'British Invasion', 'Chinese Rock', 'Classic Rock', 'Death Metal/Black Metal', 'Glam Rock', 'Hair Metal', 'Hard Rock', 'Heavy Metal', 'Jam Bands', 'Korean Rock', 'Metal', 'Prog-Rock/Art Rock', 'Psychedelic', 'Psychedelic Rock', 'Rock', 'Rock & Roll', 'Rockabilly', 'Roots Rock', 'Southern Rock', 'Surf', 'Tex-Mex'
  ],
  'Singer/Songwriter': [
    'Alternative Folk', 'Contemporary Folk', 'Contemporary Singer/Songwriter', 'Folk-Rock', 'New Acoustic', 'Singer/Songwriter', 'Traditional Folk'
  ],
  'Soundtrack': [
    'Foreign Cinema', 'Musicals', 'Original Score', 'Sound Effects', 'Soundtrack', 'TV Soundtrack', 'Video Game'
  ],
  'Spoken Word': ['Spoken Word'],
  'Vocal': ['Standards', 'Traditional Pop', 'Trot', 'Vocal', 'Vocal Pop'],
  'World': [
    'Africa', 'Afrikaans', 'Afro-Beat', 'Afro-Pop', 'Arabesque', 'Asia', 'Australia', 'Cajun', 'Calypso', 'Caribbean', 'Celtic', 'Celtic Folk', 'Contemporary Celtic', 'Dangdut', 'Dini', 'Europe', 'Fado', 'Farsi', 'Flamenco', 'France', 'Halk', 'Hawaii', 'Iberia', 'Indonesian Religious', 'Inspirational', 'Israeli', 'Japan', 'Klezmer', 'North America', 'Polka', 'Russian', 'Russian Chanson', 'Sanat', 'Soca', 'South Africa', 'South America', 'Tango', 'Traditional Celtic', 'Turkish', 'World'
  ]
};

const List<String> genres = [
  'Alternative',
  'Anime',
  'Arabic',
  'Audiobooks',
  'Blues',
  'Brazilian',
  'Children\'s Music',
  'Chinese',
  'Christian & Gospel',
  'Classical',
  'Comedy',
  'Country',
  'Dance',
  'Disney',
  'Easy Listening',
  'Electronic',
  'Enka',
  'Fitness & Workout',
  'Folk',
  'French Pop',
  'Funk',
  'German Folk',
  'German Pop',
  'Heavy Metal',
  'Hip Hop/Rap',
  'Holiday',
  'Indian',
  'Inspirational',
  'Instrumental',
  'J-pop',
  'Jazz',
  'Karaoke',
  'Kayokyoku',
  'Korean',
  'Latin',
  'Marching Bands',
  'New Age',
  'Other',
  'Pop',
  'Punk',
  'R&B/Soul',
  'Reggae',
  'Rock',
  'Singer/Songwriter',
  'Soundtrack',
  'Spoken Word',
  'Vocal',
  'World'
];
const List<String> productTypes = [
  'Single',
  'EP',
  'Album',
];
const List<String> prices = [
  'Single - Back',
  'Single - Mid',
  'Single - Front',
  'Album - Digital 45',
  'Album - Mini EP',
  'Album - EP',
  'Album - Mini Album Two',
  'Album - Mini Album One',
  'Album - Budget One',
  'Album - Budget Two',
  'Album - Back',
  'Album - Mid',
  'Album - Mid/Front',
  'Album - Front One',
  'Album - Front Two',
  'Album - Front/Plus',
  'Album - Deluxe One',
  'Album - Deluxe Two',
  'Album - Deluxe Three',
  'Album - Deluxe Four'
];
const List<String> performerRoles = [
  '12-String Guitar',
  'Accordion',
  'Acoustic Guitar',
  'Actor',
  'Alto Saxophone',
  'Alto Solo',
  'Anime Character',
  'Background Vocals',
  'Banjo',
  'Baritone Saxophone',
  'Baritone Solo',
  'Bass Clarinet',
  'Bass Guitar',
  'Bass Trombone',
  'Bassoon',
  'Bells',
  'Bongos',
  'Cajon',
  'Cello',
  'Choir',
  'Choir Master',
  'Chorus',
  'Clarinet',
  'Classical Guitar',
  'Clavier',
  'Conductor',
  'Congas',
  'Cornet',
  'Countertenor Solo',
  'DJ',
  'Djembe',
  'Double Bass',
  'Drums',
  'Electric Guitar',
  'Ensemble',
  'Fiddle',
  'First Violin',
  'Flugelhorn',
  'Flute',
  'Fretless Electric Bass Guitar',
  'Guitar',
  'Hammond Organ',
  'Harmonica',
  'Harmony Vocals',
  'Harp',
  'Harpsichord',
  'Horn',
  'Keyboards',
  'Kora',
  'Lead Guitar',
  'Lead Vocals',
  'Lute',
  'Mandolin',
  'Metallophone',
  'Mezzo-Soprano Solo',
  'Mixed Artist',
  'Music Director',
  'Oboe',
  'Orchestra',
  'Organ',
  'Pedal Steel Guitar',
  'Percussion',
  'Piano',
  'Piccolo',
  'Programming',
  'Rap',
  'Recorder',
  'Rhodes Piano',
  'Rhythm Guitar',
  'Sampled Artist',
  'Saxophone',
  'Second Violin',
  'Sitar',
  'Soprano Saxophone',
  'Soprano Solo',
  'Steel Guitar',
  'Synthesizer',
  'Tabla',
  'Tambourine',
  'Tenor Saxophone',
  'Tenor Solo',
  'Timbales',
  'Timpani',
  'Trombone',
  'Trumpet',
  'Tuba',
  'Ukulele',
  'Upright Bass',
  'Viola',
  'Viola de Gamba',
  'Violin',
  'Vocal Ensemble',
  'Vocal Solo',
  'Vocals',
  'Whistle',
  'Xylophone',
];
const List<String> writerRoles = [
  'Adapter',
  'Arranger',
  'Composer',
  'Librettist',
  'Lyricist',
  'Songwriter',
  'Transcriber',
  'Vocal Adaptation',
];
const List<String> productionRoles = [
  'Assistant Engineer',
  'Co-Producer',
  'Graphic Design',
  'Guitar Technician',
  'Mastering Engineer',
  'Mixing Engineer',
  'Producer',
  'Production Assistant',
  'Recording Engineer',
  'Sound Engineer',
  'Vocal Engineer',
];
